@page
@model EPC.WEB.Pages.Admin.CategoriesModel
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Rendering
@using EPC.Domain.Entities
@attribute [Authorize(Roles = "Admin")]

@{
    ViewData["Title"] = "Manage Commission Structure";
}

<h2 class="mb-4">Manage Commission Structure</h2>

@* --- Feedback Messages --- *@
@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Success:</strong> @Model.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@* RED BANNER: Only appears for business logic errors or system exceptions *@
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error:</strong> @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* YELLOW BANNER: Appears for input validation errors, filtered to the relevant model. *@
@if (!ViewData.ModelState.IsValid)
{
    // Filter ModelState to show only errors relevant to the CategoryInput (or the primary model failing)
    var categoryErrors = ViewData.ModelState
    .Where(m => m.Key.StartsWith(nameof(Model.CategoryInput) + ".") || m.Key.StartsWith(nameof(Model.SubCategoryInput) + ".") || string.IsNullOrEmpty(m.Key))
    .SelectMany(m => m.Value != null && m.Value.Errors != null
                     ? m.Value.Errors.AsEnumerable()
                     : Enumerable.Empty<ModelError>())
    .Where(e => !string.IsNullOrEmpty(e.ErrorMessage))
    .ToList();

    if (categoryErrors.Any())
    {
        <div class="alert alert-warning">
            <strong>Please correct the following input issues:</strong>
            <ul class="mb-0">
                @foreach (var error in categoryErrors)
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
}

<div class="row">
    <div class="col-md-6">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4>Top-Level Categories</h4>
            <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                <i class="bi bi-plus-circle"></i> Add New Category
            </button>
        </div>

        @if (Model.Categories.Any())
        {
            <ul class="list-group">
                @foreach (var category in Model.Categories)
                {
                    <li class="list-group-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <strong>@category.Name</strong>
                            <div>
                                @if (category.SubCategories.Any())
                                {
                                    <span class="badge bg-info text-dark">@category.SubCategories.Count Sub-Rates</span>
                                }
                                else if (category.CommissionRate.HasValue)
                                {
                                    <span class="badge bg-success">Rate: @category.CommissionRate.Value.ToString("P0")</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Rate Missing</span>
                                }
                                <button type="button" class="btn btn-sm btn-outline-secondary ms-2 edit-category"
                                        data-bs-toggle="modal"
                                        data-bs-target="#editCategoryModal"
                                        data-id="@category.Id"
                                        data-name="@category.Name"
                                        data-rate="@(category.CommissionRate.HasValue ? category.CommissionRate.Value : "")"
                                        data-code="@category.CategoryId"
                                        data-hassubrates="@(category.SubCategories.Any() ? "True" : "False")">
                                    Edit
                                </button>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="alert alert-info">No categories defined yet.</div>
        }
    </div>

    <div class="col-md-6">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4>Sub-Category Rates</h4>
            <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#addSubCategoryModal">
                <i class="bi bi-plus-circle"></i> Add New Sub-Rate
            </button>
        </div>

        @if (Model.Categories.Any(c => c.SubCategories.Any()))
        {
            <div class="sub-category-scroll-wrapper">
                @foreach (var category in Model.Categories.Where(c => c.SubCategories.Any()))
                {
                    <div class="card mb-3 shadow-sm">
                        <div class="card-header bg-light">
                            <strong>@category.Name</strong>
                        </div>
                        <ul class="list-group list-group-flush">
                            @foreach (var subCategory in category.SubCategories)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="flex-grow-1">
                                        @subCategory.Name
                                    </div>

                                    <div class="sub-rate-display">
                                        <span class="badge bg-success">
                                            @subCategory.CommissionRate.ToString("P0")
                                        </span>
                                    </div>

                                    <button type="button" class="btn btn-sm btn-outline-secondary ms-2 edit-sub-category"
                                            data-bs-toggle="modal" data-bs-target="#editSubCategoryModal"
                                            data-id="@subCategory.Id"
                                            data-name="@subCategory.Name"
                                            data-rate="@subCategory.CommissionRate"
                                            data-categoryid="@subCategory.CategoryId">
                                        Edit
                                    </button>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info">No categories currently use sub-rates.</div>
        }
    </div>
</div>

@* -------------------------------- MODALS -------------------------------- *@

<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-page-handler="AddCategory">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Commission Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label asp-for="CategoryInput.Name">Category Name (e.g., Notary, Shipping)</label>
                        <input asp-for="CategoryInput.Name" class="form-control" value="@Model.CategoryInput.Name" />
                        <span asp-validation-for="CategoryInput.Name" class="text-danger small"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="CategoryInput.CommissionRate">Direct Commission Rate (e.g., 0.05 for 5%)</label>
                        <input asp-for="CategoryInput.CommissionRate" type="number" step="0.001" min="0" max="1" class="form-control" value="@Model.CategoryInput.CommissionRate" />
                        <small class="form-text text-muted">Set this ONLY if the category does not use sub-rates (e.g., Notary). Leave blank if sub-rates will be defined later.</small>
                        <span asp-validation-for="CategoryInput.CommissionRate" class="text-danger small"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="CategoryInput.CategoryId">Category Code (Optional)</label>
                        <input asp-for="CategoryInput.CategoryId" class="form-control" value="@Model.CategoryInput.CategoryId" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Category</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-page-handler="UpdateCategory">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Category: <span id="edit-category-name-display"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editCategoryId" name="CategoryInput.Id" />

                    <div class="form-group mb-3">
                        <label for="editCategoryName">Category Name</label>
                        <input type="text" id="editCategoryName" name="CategoryInput.Name" class="form-control" required />
                        <span asp-validation-for="CategoryInput.Name" class="text-danger small"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label for="editCategoryCommissionRate">Direct Commission Rate (e.g., 0.05 for 5%)</label>
                        <input type="number" step="0.001" min="0" max="1" id="editCategoryCommissionRate" name="CategoryInput.CommissionRate" class="form-control" />
                        <small id="rateWarning" class="form-text text-danger d-none">
                            Warning: This category has sub-rates; the direct rate will be ignored.
                        </small>
                        <span asp-validation-for="CategoryInput.CommissionRate" class="text-danger small"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label for="editCategoryCode">Category Code (Optional)</label>
                        <input type="text" id="editCategoryCode" name="CategoryInput.CategoryId" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Save Changes</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="addSubCategoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-page-handler="AddSubCategory">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Sub-Rate (SubCategory)</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label asp-for="SubCategoryInput.CategoryId">Parent Category</label>
                        <select asp-for="SubCategoryInput.CategoryId" class="form-control" required
                                asp-items="@(new SelectList(Model.Categories, nameof(Category.Id), nameof(Category.Name)))">
                            <option value="">-- Select Parent Category --</option>
                        </select>
                        <small class="form-text text-danger">Selecting a category here will disable its direct commission rate.</small>
                        <span asp-validation-for="SubCategoryInput.CategoryId" class="text-danger small"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="SubCategoryInput.Name">Sub-Rate Name (e.g., Next-Day Air, Ground)</label>
                        <input asp-for="SubCategoryInput.Name" class="form-control" value="@Model.SubCategoryInput.Name" />
                        <span asp-validation-for="SubCategoryInput.Name" class="text-danger small"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="SubCategoryInput.CommissionRate">Commission Rate (e.g., 0.1 for 10%)</label>
                        <input asp-for="SubCategoryInput.CommissionRate" type="number" step="0.001" min="0.001" max="1" class="form-control" required value="@Model.SubCategoryInput.CommissionRate" />
                        <span asp-validation-for="SubCategoryInput.CommissionRate" class="text-danger small"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Save Sub-Rate</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="editSubCategoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-page-handler="UpdateSubCategory">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Sub-Rate: <span id="edit-sub-rate-name-display"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editSubCategoryId" name="SubCategoryInput.Id" />
                    <input type="hidden" id="editSubCategoryCategoryId" name="SubCategoryInput.CategoryId" />

                    <div class="form-group mb-3">
                        <label>Parent Category (Read-only)</label>
                        <input type="text" id="editSubCategoryParentName" class="form-control" readonly />
                    </div>

                    <div class="form-group mb-3">
                        <label for="editSubCategoryName">Sub-Rate Name</label>
                        <input type="text" id="editSubCategoryName" name="SubCategoryInput.Name" class="form-control" required />
                    </div>

                    <div class="form-group mb-3">
                        <label for="editSubCategoryCommissionRate">Commission Rate (e.g., 0.1 for 10%)</label>
                        <input type="number" step="0.001" min="0.001" max="1" id="editSubCategoryCommissionRate" name="SubCategoryInput.CommissionRate" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Update Sub-Rate</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // CRITICAL: The data array used for lookup.
            var categories = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Categories));

            // Utility function to find parent name
            const getParentName = (categoryId) => {
                const idToFind = parseInt(categoryId);

                console.log("Searching for Category ID:", idToFind);

                const parentCategory = categories.find(c => {
                    // Since c.Id is undefined in default camelCase, it fails silently. We try to access it explicitly.
                    return c.Id === idToFind || c.id === idToFind;
                });

                if (parentCategory) {
                    // Use the name property (which is consistently camelCase/PascalCase)
                    console.log("Found Parent Name:", parentCategory.Name || parentCategory.name);
                } else {
                    console.error("Parent Category not found for ID:", idToFind);
                }

                return parentCategory ? (parentCategory.Name || parentCategory.name) : 'Unknown';
            };


            // --- 1. Sub-Category Edit Logic (Modal Population) ---
            var editSubModal = document.getElementById('editSubCategoryModal');
            if (editSubModal) {
                editSubModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;

                    var subId = button.getAttribute('data-id');
                    var name = button.getAttribute('data-name');
                    var rate = button.getAttribute('data-rate');
                    var categoryId = button.getAttribute('data-categoryid');

                    document.getElementById('editSubCategoryId').value = subId;
                    document.getElementById('editSubCategoryCategoryId').value = categoryId;
                    document.getElementById('editSubCategoryName').value = name;
                    document.getElementById('editSubCategoryCommissionRate').value = rate;

                    // CORRECTED CALL: Pass categoryId
                    document.getElementById('editSubCategoryParentName').value = getParentName(categoryId);

                    document.getElementById('edit-sub-rate-name-display').textContent = name;
                });
            }

            // --- 2. Category Edit Logic (Modal Population - remains unchanged) ---
            var editCategoryModal = document.getElementById('editCategoryModal');
            if (editCategoryModal) {
                editCategoryModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;

                    var id = button.getAttribute('data-id');
                    var name = button.getAttribute('data-name');
                    var rate = button.getAttribute('data-rate');
                    var code = button.getAttribute('data-code');
                    var hasSubRates = button.getAttribute('data-hassubrates') === 'True';

                    // Populate modal fields
                    document.getElementById('editCategoryId').value = id;
                    document.getElementById('editCategoryName').value = name;
                    document.getElementById('editCategoryCommissionRate').value = rate;
                    document.getElementById('editCategoryCode').value = code;
                    document.getElementById('edit-category-name-display').textContent = name;

                    // Handle Business Rule UI Warning
                    var rateInput = document.getElementById('editCategoryCommissionRate');
                    var warning = document.getElementById('rateWarning');

                    if (hasSubRates) {
                        warning.classList.remove('d-none');
                        // Disable input to prevent setting a conflicting rate
                        rateInput.setAttribute('disabled', 'disabled');
                    } else {
                        warning.classList.add('d-none');
                        rateInput.removeAttribute('disabled');
                    }
                });
            }
        });
    </script>
}